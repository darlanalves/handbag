{"version":3,"file":"handbag.js","sources":["../src/index.js"],"sourcesContent":["const toString = Object.prototype.toString;\nconst INSTANTIATING = {};\nconst INJECTOR_FROZEN_ERROR = 'This injector is frozen and cannot be modified';\n\nconst is = {\n    array: (value) => {\n        return '[object Array]' === toString.call(value);\n    },\n\n    function: (value) => {\n        return typeof value === 'function';\n    },\n\n    object: (value) => {\n        return value !== null && typeof value === 'object';\n    }\n};\n\nconst FN_ARGS = /^function\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m;\n\n/**\n * Dependency Injection container\n */\nclass Injector {\n    constructor() {\n        this._reset();\n    }\n\n    /**\n     * @param {string} name\n     * @param {Object} [locals]     Map of injectables to override\n     */\n    get(name, locals) {\n        if (is.array(name)) {\n            return name.map(function(item) {\n                return this.get(item, locals);\n            }, this);\n        }\n\n        if (name === 'handbag') {\n            return this;\n        }\n\n        if (locals && locals.hasOwnProperty(name)) {\n            return locals[name];\n        }\n\n        const cache = this.$cache;\n\n        if (cache.hasOwnProperty(name) && cache[name] !== INSTANTIATING) {\n            return cache[name];\n        }\n\n        const resource = this._getOrCreate(name, locals);\n\n        if (true === this.$privates[name]) {\n            delete cache[name];\n        }\n\n        // stack.pop();\n        return resource;\n    }\n\n    /**\n     * @private\n     */\n    _getOrCreate(name, locals) {\n        const cache = this.$cache;\n        const stack = this.$stack;\n        const providers = this.$providers;\n\n        let error;\n\n        stack.push(name);\n\n        try {\n            if (!providers.hasOwnProperty(name)) {\n                throw new Error('Dependency not found: ' + stack.join(' <- '));\n            }\n\n            if (cache[name] === INSTANTIATING) {\n                throw new Error('Circular dependency found: ' + stack.join(' <- '));\n            }\n\n            cache[name] = INSTANTIATING;\n            cache[name] = this.instantiate(providers[name], locals);\n        } catch (e) {\n            if (cache[name] === INSTANTIATING) {\n                delete cache[name];\n            }\n\n            error = e;\n        } finally {\n            stack.pop();\n        }\n\n        if (error) {\n            throw error;\n        }\n\n        return cache[name];\n    }\n\n    /**\n     * @param {string} name\n     * @return {boolean}\n     */\n    has(name) {\n        return this.$cache.hasOwnProperty(name) || this.$providers.hasOwnProperty(name);\n    }\n\n    /**\n     * Register a provider for a value meant to be a singleton instance\n     * @param {string} name\n     * @param {Function|Class} value\n     */\n    provideShared(name, value) {\n        return this.provide(name, value, true);\n    }\n\n    /**\n     * Register a provider for a value meant to be recreated everytime it is required\n     * @param {string} name\n     * @param {Function|Class} value\n     */\n    provideNotShared(name, value) {\n        return this.provide(name, value, false);\n    }\n\n    /**\n     * Register a provider for a value\n     * @param {string} name\n     * @param {Function|Class} value\n     * @param {boolean} isShared\n     */\n    provide(name, value, isShared = true) {\n        if (this.$frozen) {\n            throw new Error(INJECTOR_FROZEN_ERROR);\n        }\n\n        if (is.array(value)) {\n            let provider = value[value.length - 1];\n\n            if (!is.function(provider)) {\n                throw new Error('Invalid provider for ' + name);\n            }\n\n            this._register(name, value, isShared);\n\n            return this;\n        }\n\n        if (is.function(value)) {\n            let provider = this._parseDependencies(value);\n            provider.push(value);\n            this._register(name, provider, isShared);\n\n            return this;\n        }\n\n        this.constant(name, value);\n        return this;\n    }\n\n    /**\n     * Provider to any value that won't change during the injector lifecycle\n     * @param {string} name\n     * @param {*} value\n     */\n    constant(name, value) {\n        if (this.$frozen) {\n            throw new Error(INJECTOR_FROZEN_ERROR);\n        }\n\n        this.$cache[name] = value;\n        return this;\n    }\n\n    /**\n     * @param {Function} Type\n     * @param {Object} [locals]\n     */\n    instantiate(Type, locals) {\n        var Constructor = function() {},\n            instance, returnedValue;\n\n        Constructor.prototype = (is.array(Type) ? Type[Type.length - 1] : Type).prototype;\n\n        instance = new Constructor();\n        returnedValue = this.invoke(Type, instance, locals);\n        instance = (is.object(returnedValue) || is.function(returnedValue)) ? returnedValue : instance;\n\n        return instance;\n    }\n\n    /**\n     * @param {Function|Array} invokable    Either a function or an array with dependencies and a function\n     * @param {Object} context\n     * @param {Object} [locals]\n     *\n     * @example\n     *\n     * function fn(foo) {}\n     * const context = {};\n     *\n     * handbag.invoke(fn, context, { foo: 1 });\n     * handbag.invoke(['foo', fn], context, { foo: 1 });\n     */\n    invoke(invokable, context, locals) {\n        let _invokable;\n\n        if (is.array(invokable)) {\n            _invokable = this._getInvokableFromArray(invokable);\n        } else if (is.function(invokable)) {\n            _invokable = this._getInvokableFromFunction(invokable);\n        }\n\n        if (!(_invokable && _invokable.method)) {\n            throw new Error('Invalid invokable value');\n        }\n\n        let { dependencies } = _invokable;\n\n        if (dependencies.length) {\n            dependencies = this.get(dependencies, locals);\n        }\n\n        return _invokable.method.apply(context || null, dependencies);\n    }\n\n    _getInvokableFromArray(array) {\n        let dependencies = array.slice(0);\n        let method = dependencies.pop();\n\n        if (!is.function(method)) {\n            method = null;\n        }\n\n        return { dependencies, method };\n    }\n\n    _getInvokableFromFunction(fn) {\n        let dependencies = fn.$inject || this._parseDependencies(fn);\n\n        return { dependencies, method: fn };\n    }\n\n    _annotateConstructor() {\n        var args = Array.from(arguments),\n            Constructor = args.pop();\n\n        Constructor.$inject = args;\n\n        return Constructor;\n    }\n\n    _parseDependencies(fn) {\n        var match = fn.toString().match(FN_ARGS),\n            fnArgs = match && match[1];\n\n        return fnArgs && fnArgs.split(',').map(function(arg) {\n            return arg.trim();\n        }) || [];\n    }\n\n    _register(name, provider, isShared) {\n        if (this.$providers.hasOwnProperty(name)) {\n            throw new Error('Cannot register a dependency that already exists: ' + name);\n        }\n\n        this.$providers[name] = this._annotateConstructor.apply(null, provider);\n\n        if (!isShared) {\n            this.$privates[name] = true;\n        }\n    }\n\n    /**\n     * Lock this injector to prevent any further registration of values\n     */\n    freeze() {\n        this.$frozen = true;\n    }\n\n    /**\n     * Reset all the values declared in this injector\n     * @private\n     */\n    _reset() {\n        this.$cache = {};\n        this.$providers = {};\n        this.$privates = {};\n        this.$stack = [];\n    }\n\n    /**\n     * @return {Injector}\n     */\n    static create() {\n        return new Injector();\n    }\n}\n\nexport default Injector;\n"],"names":[],"mappings":"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"}