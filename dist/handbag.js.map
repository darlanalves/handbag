{"version":3,"file":"handbag.js","sources":["../src/index.js"],"sourcesContent":["const toString = Object.prototype.toString;\nconst INSTANTIATING = {};\nconst INJECTOR_FROZEN_ERROR = 'This injector is frozen and cannot be modified';\n\nconst is = {\n    array: (value) => {\n        return '[object Array]' === toString.call(value);\n    },\n\n    function: (value) => {\n        return typeof value === 'function';\n    },\n\n    object: (value) => {\n        return value !== null && typeof value === 'object';\n    }\n};\n\nconst FN_ARGS = /^function\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m;\n\n/**\n * Dependency Injection container\n */\nclass Injector {\n    constructor() {\n        this._reset();\n    }\n\n    /**\n     * @param {string|Symbol} name\n     * @param {Object} [locals={}]     Map of injectables to override\n     */\n    get(name, locals = {}) {\n        if (!name) {\n            throw new Error('Dependency name is required');\n        }\n\n        if (is.array(name)) {\n            return name.map(function(item) {\n                return this.get(item, locals);\n            }, this);\n        }\n\n        if (name === 'handbag') {\n            return this;\n        }\n\n        let isInLocals = locals.hasOwnProperty(name);\n        if (!isInLocals && typeof locals.getOwnPropertySymbols === 'function') {\n            isInLocals = locals.getOwnPropertySymbols().indexOf(name) !== -1;\n        }\n\n        if (isInLocals) {\n            return locals[name];\n        }\n\n        const stack = this.$stack;\n\n        if (!this.has(name)) {\n            let error = 'Dependency not found: ' + name +\n                (stack.length ? ' (' + stack.join(' <- ') + ')' : '');\n\n            throw new Error(error);\n        }\n\n        return this._getResource(name, locals);\n    }\n\n    /**\n     * @param {string|Symbol} name\n     * @param {Object} [locals]     Map of injectables to override\n     */\n    _getResource(name, locals) {\n        if (this.hasLocalProvider(name)) {\n            return this.getOrCreate(name, locals);\n        }\n\n        const injector = this.$children.find(i => i.hasLocalProvider(name));\n        return injector.getOrCreate(name, locals);\n    }\n\n    /**\n     * Get a value from cache or instantiate a value from registered provider\n     * @param {string|Symbol} name\n     * @param {Object} [locals]     Map of injectables to override\n     * @private\n     */\n    getOrCreate(name, locals) {\n        const cache = this.$cache;\n        const stack = this.$stack;\n        const providers = this.$providers;\n\n        if (cache.has(name) && !this._isInstantiating(name)) {\n            return cache.get(name);\n        }\n\n        let error, value;\n        stack.push(name);\n\n        try {\n            if (this._isInstantiating(name)) {\n                throw new Error('Circular dependency found: ' + stack.join(' <- '));\n            }\n\n            cache.set(name, INSTANTIATING);\n            value = this.instantiate(providers.get(name), locals);\n            cache.set(name, value);\n        } catch (e) {\n            if (this._isInstantiating(name)) {\n                cache.delete(name);\n            }\n\n            error = e;\n        } finally {\n            stack.pop();\n        }\n\n        if (error) {\n            throw error;\n        }\n\n        if (true === this.$privates[name]) {\n            cache.delete(name);\n        }\n\n        return value;\n    }\n\n    _isInstantiating(name) {\n        return this.$cache.get(name) === INSTANTIATING;\n    }\n\n    /**\n     * Check for a provider in this injector and all children\n     * @param {string|Symbol} name\n     * @return {boolean}\n     */\n    has(name) {\n        return this.hasLocalProvider(name) || this.hasChildProvider(name);\n    }\n\n    /**\n     * Check for a provider only in this instance (not checking on children)\n     * @param {string|Symbol} name\n     * @return {boolean}\n     */\n    hasLocalProvider(name) {\n        let v = this.$cache.has(name) || this.$providers.has(name);\n        return v;\n    }\n\n    /**\n     * Check for a provider in all children injectors\n     * @param {string|Symbol} name\n     * @return {boolean}\n     */\n    hasChildProvider(name) {\n        var v= Boolean(this.$children.find(i => i.hasLocalProvider(name)));\n        return v;\n    }\n\n    /**\n     * Register a provider for a value meant to be a singleton instance\n     * @param {string|Symbol} name\n     * @param {Function|Class} value\n     */\n    provideShared(name, value) {\n        return this.provide(name, value, true);\n    }\n\n    /**\n     * Register a provider for a value meant to be recreated everytime it is required\n     * @param {string|Symbol} name\n     * @param {Function|Class} value\n     */\n    provideNotShared(name, value) {\n        return this.provide(name, value, false);\n    }\n\n    /**\n     * Register a provider for a value\n     * @param {string|Symbol} name\n     * @param {Function|Class} value\n     * @param {boolean} isShared\n     */\n    provide(name, value, isShared = true) {\n        if (is.object(name)) {\n            Object.keys(name).forEach(k => this.provide(k, name[k], isShared));\n            return;\n        }\n\n        if (this.$frozen) {\n            throw new Error(INJECTOR_FROZEN_ERROR);\n        }\n\n        if (is.array(value)) {\n            let provider = value[value.length - 1];\n\n            if (!is.function(provider)) {\n                throw new Error('Invalid provider for ' + name);\n            }\n\n            this._register(name, value, isShared);\n            return this;\n        }\n\n        if (is.function(value)) {\n            let provider = this._parseDependencies(value);\n            provider.push(value);\n\n            this._register(name, provider, isShared);\n            return this;\n        }\n\n        this.constant(name, value);\n        return this;\n    }\n\n    /**\n     * Provider to any value that won't change during the injector lifecycle\n     * @param {string|Symbol} name\n     * @param {*} value\n     */\n    constant(name, value) {\n        if (is.object(name)) {\n            Object.keys(name).forEach(k => this.constant(k, name[k]));\n            return;\n        }\n\n        if (this.$frozen) {\n            throw new Error(INJECTOR_FROZEN_ERROR);\n        }\n\n        this.$cache.set(name, value);\n        return this;\n    }\n\n    /**\n     * @param {Function} Type\n     * @param {Object} [locals]\n     */\n    instantiate(Type, locals) {\n        var Constructor = function() {},\n            instance, returnedValue;\n\n        Constructor.prototype = (is.array(Type) ? Type[Type.length - 1] : Type).prototype;\n\n        instance = new Constructor();\n        returnedValue = this.invoke(Type, instance, locals);\n        instance = (is.object(returnedValue) || is.function(returnedValue)) ? returnedValue : instance;\n\n        return instance;\n    }\n\n    /**\n     * @param {Function|Array} invokable    Either a function or an array with dependencies and a function\n     * @param {Object} context\n     * @param {Object} [locals]\n     *\n     * @example\n     *\n     * function fn(foo) {}\n     * const context = {};\n     *\n     * handbag.invoke(fn, context, { foo: 1 });\n     * handbag.invoke(['foo', fn], context, { foo: 1 });\n     */\n    invoke(invokable, context, locals) {\n        let _invokable;\n\n        if (is.array(invokable)) {\n            _invokable = this._getInvokableFromArray(invokable);\n        } else if (is.function(invokable)) {\n            _invokable = this._getInvokableFromFunction(invokable);\n        }\n\n        if (!(_invokable && _invokable.method)) {\n            throw new Error('Invalid invokable value');\n        }\n\n        let { dependencies } = _invokable;\n\n        if (dependencies.length) {\n            dependencies = this.get(dependencies, locals);\n        }\n\n        return _invokable.method.apply(context || null, dependencies);\n    }\n\n    _getInvokableFromArray(array) {\n        let dependencies = array.slice(0);\n        let method = dependencies.pop();\n\n        if (!is.function(method)) {\n            method = null;\n        }\n\n        return { dependencies, method };\n    }\n\n    _getInvokableFromFunction(fn) {\n        let dependencies = fn.$inject || this._parseDependencies(fn);\n\n        return { dependencies, method: fn };\n    }\n\n    _annotateConstructor() {\n        var args = Array.from(arguments),\n            Constructor = args.pop();\n\n        Constructor.$inject = args;\n\n        return Constructor;\n    }\n\n    _parseDependencies(fn) {\n        var match = fn.toString().match(FN_ARGS),\n            fnArgs = match && match[1];\n\n        return fnArgs && fnArgs.split(',').map(function(arg) {\n            return arg.trim();\n        }) || [];\n    }\n\n    _register(name, provider, isShared) {\n        if (this.$providers.has(name)) {\n            throw new Error('Cannot register a dependency that already exists: ' + name);\n        }\n\n        const value = this._annotateConstructor.apply(null, provider);\n        this.$providers.set(name, value);\n\n        if (!isShared) {\n            this.$privates[name] = true;\n        }\n    }\n\n    /**\n     * Lock this injector to prevent any further registration of values\n     */\n    freeze() {\n        this.$frozen = true;\n    }\n\n    /**\n     * Reset all the values declared in this injector\n     * @private\n     */\n    _reset() {\n        this.$cache = new Map();\n        this.$providers = new Map();\n        this.$privates = {};\n        this.$stack = [];\n        this.$children = [];\n    }\n\n    /**\n     * @param {Injector} injector\n     */\n    addInjector(injector) {\n        this.$children.push(injector);\n    }\n\n    /**\n     * @return {Injector}\n     */\n    static createInjector() {\n        return new Injector();\n    }\n}\n\nexport default Injector;\n"],"names":[],"mappings":"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"}